#include<iostream>
#include<vector>
#include<queue>
using namespace std;

const int MAXV = 510;
const int MAXE = 10010;
struct Node{
  int v, w; // w表示边权，常常表示活动完成时间
}

vector<Node> G[MAXV];
stack<int> topOrder;
int ve[MAXV], vl[MAXV], e[MAXE], l[MAXE];
int n, m;
int inDegree[MAXV];

bool topologicalSort()
{
  queue<int> q;
  for(int i = 0; i < n; i++){
    if(inDegree[i] == 0)
      q.push(i);
  }
  
  while(!q.empty()){
    int u = q.front();
    topOrder.push_back(u);
    for(int i = 0; i < G[u].size; i++){
      int v = G[u][i].v;
      inDegree[v]--;
      if(inDegree[v] == 0){
        q.push(v);
      }
      
      if(ve[u] + G[u][i].w > ve[v]){
        ve[v] = ve[u] + G[u][i].w;
      }
    }
  }
  
  if(topOrder.size() == n) return true;
  else return false;
}
